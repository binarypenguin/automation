- debug:
    var: site

- name:  Set {{ site.domainname }} facts
  set_fact:
    system_pages: True
    webroot: /srv/nginx/{{ team.name }}/{{ site.domainname }}/

- name: Is {{ site.domainname }} Laravel?
  set_fact:
    webroot: /srv/nginx/{{ team.name }}/{{ site.domainname }}/public
    system_pages: False
  when: site.type == "laravel"

- name: Is {{ site.domainname }} Jekyll?
  set_fact:
    webroot: /srv/nginx/{{ team.name }}/{{ site.domainname }}/_site
  when: site.type == "jekyll"

- name: Create site database for {{ site.domainname }}e
  mysql_db:
    name: "{{ team.name }}-{{ site.domainname | replace('.','_') }}"
    login_host: "{{ site.db_server }}"
    state: present
  when: site.db_server is defined and site.db_server | ipaddr

- name: Create site virtual directory for {{ site.domainname }}
  file:
    path: "{{ nginx_www_dir }}/{{ team.name }}/{{ site.domainname }}"
    state: directory
    owner: "www-{{ team.name }}"
    group: "www-{{ team.name }}"
    mode: 0755
  when: site.type != "redirect"

- name: Create available virtual hosts for {{ site.domainname }}
  template:
    src: templates/vhost.j2
    dest: "/etc/nginx/sites-available/{{ team.name }}-{{ site.domainname }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ site.managed | default(True) }}"
  when: site.type != "redirect"

- name: Create available virtual hosts redirect for {{ site.domainname }}
  template:
    src: templates/vhost-redirect.j2
    dest: "/etc/nginx/sites-available/{{ team.name }}-{{ site.domainname }}"
    owner: root
    group: root
    mode: 0644
    force: "{{ site.managed | default(True) }}"
  when: site.type == "redirect"

- name: Enable virtual hosts for {{ site.domainname }}
  file:
    src: "/etc/nginx/sites-available/{{ team.name }}-{{ site.domainname }}"
    dest: "/etc/nginx/sites-enabled/{{ team.name }}-{{ site.domainname }}"
    owner: root
    group: root
    mode: 0644
    state: link

- name: Create Deploy Key Location for {{ team.name }}
  file:
    path: "/etc/ssh/deploy_keys/{{ team.name }}"
    state: directory
    mode: 0700
    owner: root
    group: root

- stat:
    path: "/etc/ssh/deploy_keys/{{ team.name }}/{{ site.domainname }}"
  register: kp

- name: Generate Site Deploy Keypair if it doesn't exist for {{ site.domainname }}
  block:
    - name: Generate Keypair
      openssh_keypair:
        path: "/etc/ssh/deploy_keys/{{ team.name }}/{{ site.domainname }}"
        type: rsa
        size: 4096
      register: result
    - debug:
        msg: "{{ result }}"

    - pause:
        prompt: Deploy key \n"{{ result.public_key }}"
  when: kp.stat.exists == False and site.private_repo is defined

- name: Pull private website repos for {{ site.domainname }}
  git:
    repo: "{{ site.repo }}"
    dest: "{{ nginx_www_dir }}/{{ team.name }}/{{ site.domainname }}"
    version: "{{ site.version | default('HEAD') }}"
    key_file: "/etc/ssh/deploy_keys/{{ team.name }}/{{ site.domainname }}"
  when: site.repo is defined and site.private_repo is defined

- name: Pull website repos for {{ site.domainname }}
  git:
    repo: "{{ site.repo }}"
    dest: "{{ nginx_www_dir }}/{{ team.name }}/{{ site.domainname }}"
    version: "{{ site.version | default('HEAD') }}"
  when: site.repo is defined and site.private_repo is not defined

- name: Update Folder Permissions for {{ site.domainname }} 
  file:
    path: "{{ nginx_www_dir }}/{{ team.name }}/{{ site.domainname }}"
    owner: "www-{{ team.name }}"
    group: "www-{{ team.name }}"
    mode: u=rwX,g=rwX,o=rX
    recurse: yes
  when: site.type != "redirect"

# - name: Compile the Jekylls
#   include_tasks: jekyll.yml
#   args:
#     apply:
#       become: yes
#       become_user: "www-{{ team.name }}"
#       environment:
#         PATH: "{{ nginx_www_dir }}/{{ team.name }}/.gem/ruby/2.5.0/bin:/usr/bin:/bin:/sbin"
#   when: site.type == "jekyll"
